# Created on 2022-12-12 by converting .gitlab-ci.yaml with gh actions-importer
# gh version 2.20.2, actions-importer v1.0.1, actions-importer/cli v1.0.14577

name: nfdi4cat/ta1-ontologies/voc4cat-template
on:
  push:
  pull_request:
  workflow_dispatch:
concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: true
env:
  PROJECT_ACCESS_TOKEN: "${{ secrets.PROJECT_ACCESS_TOKEN }}"
  VOC4CAT_READ_TOKEN: "${{ secrets.VOC4CAT_READ_TOKEN }}"
jobs:
  vocab_build:
    runs-on: ubuntu-latest
    container:
      image: python:3.10.8-bullseye
    if: ${{ github.event_name }} == 'merge_request_event'
    timeout-minutes: 60
    env:
      PIP_CACHE_DIR: "${{ github.workspace }}/.cache/pip"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 20
        lfs: true
    - uses: actions/cache@v3
      with:
        path: |-
          .cache/pip
          .venv/
        key: default
    - run: python --version
    - run: python -m venv .venv
    - run: source .venv/bin/activate
    - run: python -m pip install -U pip
    - run: pip install -U git+https://${{ github.event.repository.name }}:$VOC4CAT_READ_TOKEN@gitlab.fokus.fraunhofer.de/nfdi4cat/ta1-ontologies/voc4cat-tool.git@main
    - run: git config --global user.email "${{ github.actor }}"
    - run: git config --global user.name "${{ github.actor }}"
    - run: git fetch --tags
    - run: git branch -v
    - run: ls -l outbox/ || echo "outbox directory does not exist."
    - run: voc4cat --version
    - run: 'voc4cat --add_IRI --check --forward --docs --output-directory outbox inbox-excel-vocabs/ |& tee voc4cat.log || EXIT_CODE=${PIPESTATUS[0]}
        '
    - run: mv voc4cat.log outbox
    - run: ls -l outbox/ || echo "outbox directory does not exist."
    - run: echo "${EXIT_CODE}"
    - run: if [ $EXIT_CODE -ne 0 ]; then exit ${EXIT_CODE}; fi;
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: "${{ github.job }}"
        path: outbox/
  vocab_commit:
    needs: vocab_build
    runs-on: ubuntu-latest
    container:
      image: python:3.10.8-bullseye
    if: ${{ github.event_name }} == 'merge_request_event'
    timeout-minutes: 60
    env:
      PIP_CACHE_DIR: "${{ github.workspace }}/.cache/pip"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 20
        lfs: true
    - uses: actions/cache@v3
      with:
        path: |-
          .cache/pip
          .venv/
        key: default
    - run: python --version
    - run: python -m venv .venv
    - run: source .venv/bin/activate
    - run: python -m pip install -U pip
    - run: pip install -U git+https://${{ github.event.repository.name }}:$VOC4CAT_READ_TOKEN@gitlab.fokus.fraunhofer.de/nfdi4cat/ta1-ontologies/voc4cat-tool.git@main
    - run: git config --global user.email "${{ github.actor }}"
    - run: git config --global user.name "${{ github.actor }}"
    - run: git fetch --tags
    - run: git branch -v
    - run: git checkout ${{ github.event.pull_request.head.ref }}
    - run: git status
    - run: merge_vocab outbox/ vocabularies/
    - run: git add vocabularies/\*.ttl || echo "No ttl files to add."
    - run: git status
    - run: git remote set-url origin "https://${{ github.event.repository.name }}:$PROJECT_ACCESS_TOKEN@${{ github.server_url }}/${{ github.repository }}.git"
    - run: 'git commit -m "CI: vocabulary update in pipeline ${{ github.repository}}/${{ github.workflow }}" || echo "Nothing to commit"'
    - run: echo "pushing to branch ${{ github.event.pull_request.head.ref }}"
    - run: git push -o ci.skip origin HEAD:${{ github.event.pull_request.head.ref }}
  vocab_clean:
    needs: vocab_commit
    runs-on: ubuntu-latest
    container:
      image: python:3.10.8-bullseye
    if: ${{ github.event_name }} == 'merge_request_event'
    timeout-minutes: 60
    env:
      PIP_CACHE_DIR: "${{ github.workspace }}/.cache/pip"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 20
        lfs: true
    - uses: actions/cache@v3
      with:
        path: |-
          .cache/pip
          .venv/
        key: default
    - run: python --version
    - run: python -m venv .venv
    - run: source .venv/bin/activate
    - run: python -m pip install -U pip
    - run: pip install -U git+https://${{ github.event.repository.name }}:$VOC4CAT_READ_TOKEN@gitlab.fokus.fraunhofer.de/nfdi4cat/ta1-ontologies/voc4cat-tool.git@main
    - run: git config --global user.email "${{ github.actor }}"
    - run: git config --global user.name "${{ github.actor }}"
    - run: git fetch --tags
    - run: git branch -v
    - run: git config user.name "CI.runner"
    - run: git config user.email "CI.runner@gitlab.fokus.fraunhofer.de"
    - run: git checkout ${{ github.event.pull_request.head.ref }}
    - run: git status
    - run: git rm inbox-excel-vocabs/\*.xlsx || echo "No xlsx files to remove."
    - run: git status
    - run: git remote set-url origin "https://${{ github.event.repository.name }}:$PROJECT_ACCESS_TOKEN@${{ github.server_url }}/${{ github.repository }}.git"
    - run: git remote -v
    - run: 'git commit -m "CI: remove Excel files from inbox-excel-vocabs" || echo "Nothing to commit"'
    - run: git push -o ci.skip origin HEAD:${{ github.event.pull_request.head.ref }}
  vocab_publish:
    needs:
    - vocab_build
    - vocab_commit
    - vocab_clean
    runs-on: ubuntu-latest
    container:
      image: python:3.10.8-bullseye
    if: github.ref == 'refs/heads/main'
    timeout-minutes: 60
    env:
      PIP_CACHE_DIR: "${{ github.workspace }}/.cache/pip"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 20
        lfs: true
    - uses: actions/cache@v3
      with:
        path: |-
          .cache/pip
          .venv/
        key: default
    - uses: actions/download-artifact@v2
    - run: python --version
    - run: python -m venv .venv
    - run: source .venv/bin/activate
    - run: python -m pip install -U pip
    - run: pip install -U git+https://${{ github.event.repository.name }}:$VOC4CAT_READ_TOKEN@gitlab.fokus.fraunhofer.de/nfdi4cat/ta1-ontologies/voc4cat-tool.git@main
    - run: git config --global user.email "${{ github.actor }}"
    - run: git config --global user.name "${{ github.actor }}"
    - run: git fetch --tags
    - run: git branch -v
    - run: voc4cat --version
    - run: echo "Welcome to the partially implemented deploy pipeline."
    - run: voc4cat --check --forward --docs --output-directory publish vocabularies/
    - run: cp vocabularies/*.ttl publish/ || echo "no turtle(ttl) vocabulary files to publish."
    - run: ls -l publish/ || echo "publish directory does not exist."
    - uses: actions/upload-artifact@v2
      if: success()
      with:
        name: "${{ github.job }}"
        path: publish/
